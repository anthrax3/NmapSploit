#!/bin/bash

cyan='\e[0;36m'
green='\e[0;34m'
lightgreen='\e[1;32m'
white='\e[1;37m'
red='\e[1;31m'
BlueF='\e[1;34m'
yellow='\e[1;33m'
Reset='\e[1;0m'

menu () {

		echo -e " "
		echo -e "	1- NETWORK EXPLORATION "
		echo -e "	2- GATHERING ADDITIONAL HOST INFORMATION "
		echo -e "	3- AUDITING WEB SERVERS  "
		echo -e "	4- AUDITING MAIL SERVERS  "
		echo -e "	5- GENERATING SCAN REPORTS  "
		echo -e "	6- UPDATE NMAP SCRIPTS  "
		echo -e " "
		echo -n -e $red'  \033[4mNMAPSCAN:\033[0m>> '; tput sgr0 #insert your choice
		read n0
	
		if test $n0 == '6'
			then
			rm nmap_*.tar.gz && rm -r vulscan
			rm -r /usr/share/nmap/scripts/vulscan
			wget http://www.computec.ch/projekte/vulscan/download/nmap_nse_vulscan-2.0.tar.gz && tar -xf nmap_*.tar.gz  
			cp -r vulscan /usr/share/nmap/scripts/
			nmap --script-updatedb
			sleep 3
		elif test $n0 == '1'
 			then
 			hostdisc
			
		elif test $n0 == '2'
			then
			hostinf

		elif test $n0 == '3'
 			then
 			webaud

		elif test $n0 == '4'
 			then
 			mailaud

		elif test $n0 == '5'
 			then
 			reportsc
 		fi
}
hostdisc() {
			echo -e " "
			echo -e "	NETWORK EXPLORATION - HOSTS DISCOVERING"
			echo -e "+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
 			echo -e "	1- TCP SYN PING SCANS"
 			echo -e "	2- TCP ACK PING SCANS"
 			echo -e "	3- UDP PING SCANS"
 			echo -e "	4- ICMP PING SCANS"
 			echo -e "	5- IP PROTOCOL PING SCANS "
 			echo -e "	6- ARP PING SCANS"
 			echo -e "	7- BROADCAST PING "
 			echo -e "	8- IPv6 SCANNING "
 			echo -e "	9- GATHERING NETWORK INFORMATION WITH BROADCAST SCRIPTS"
 			echo -e " "
 			echo -n -e $red'  \033[4mNMAPSCAN:\033[0m>> '; tput sgr0 #insert your choice
 			read n1
			
			if test $n1 == '1'
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap -sP -PS $ip/24
			elif test $n1 == '2'
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap -sP -PA $ip
			elif test $n1 == '3'
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap -sP -PU $ip
			elif test $n1 == '4'
				then
				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -sP -PE $ip
			elif test $n1 == '5'
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap  -sP -PO $ip
				echo -e "**********************************************"
				nmap  -sP -PO --packet-trace $ip
			elif test $n1 == '6'
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				echo -e " You went spoofing MAC address to ARP SCAN ?"
				read n11
				if [ $n11 != 'y' ] && [ $n11 != 'Y' ]
					then
					nmap -sP -PR --spoof-mac 5C:4C:A9:F2:DC:7C $ip/24
				echo -e "address MAC have been changed"	
				elif [ $n11 != 'n' ] && [ $n11 != 'N' ]
					then
				nmap  sP -PR $ip/24
				fi
			elif test $n1 == '7'
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap --script broadcast-ping --script-args broadcast-ping.num_probes=5 $ip
			elif test $n1 == '8'
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap -6 -O $ip
			elif test $n1 == '9'
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap --script broadcast-* $ip
			else
				echo -e "Incorrect Number"
			fi
			echo -n -e "Back to Last Menu? ( Yes / No ) :"
			read back
			if [ $back != 'n' ] && [ $back != 'N' ]
					then
					clear
					menu
			elif [ $back != 'y' ] && [ $back != 'Y' ]
					then
					hostdisc
			fi		
			
}

hostinf() {
			echo -e " "
			echo -e " 	GATHERING ADDITIONAL HOST INFORMATION "
			echo -e " ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
 			echo -e "	1- GEOLOCATING AN IP ADDRESS"
 			echo -e "	2- GETTING INFORMATION FROM WHOIS RECORDS"
 			echo -e "	3- CHECKING IF A HOST IS KNOWN FOR MALICIOUS ACTIVITIES"
 			echo -e "	4- COLLECTING VALID E_MAIL ACCOUNTS"
 			echo -e "	5- DISCOVERING HOSTNAMES POINTING TO THE SAME IP ADDRESS "
 			echo -e "	6- BRUTE FORCING DNS RECORDS"
 			echo -e "	7- FINGERPRINTING THE OPERATING SYSTEM OF A HOST "
 			echo -e "	8- MATCHING SERVICES WITH KNOW SECURITY VULNERABILITIES "
 			echo -e "	9- SPOOFING THE ORIGIN IP OF A PORT SCAN"
 			echo -e " "
 			echo -n -e $red'  \033[4mNMAPSCAN:\033[0m>> '; tput sgr0 #insert your choice
 			read n2
			

 			if test $n2 == '1'
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap --script ip-geolocation-* $ip				
			elif test $n2 == '2' 
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap -sn --script whois-ip --script-args whois.whodb=nocache $ip
			elif test $n2 == '3' 
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap -p80 --script http-google-malware -v $ip
				echo -e "**************************************************"
				nmap -sV --script=http-malware-host $ip
			elif test $n2 == '4' 
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap --script-updatedb
				echo -e "**************************************************"
				nmap -p80 --script http-google-email,http-email-harvest $ip
			elif test $n2 == '5' 
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap --script-updatedb
				echo -e ""
				nmap -p80 --script hostmap-* $ip
			elif test $n2 == '6' 
				then
				echo -e " What is your IP Target or Host: "
 				read ip26
				nmap --script dns-brute $ip
			elif test $n2 == '7' 
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap -O -v $ip
			elif test $n2 == '8' 
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap -sV --script=vulscan/vulscan.nse $ip
			elif test $n2 == '9' 
				then
				echo -e " What is your IP Target or Host: "
 				read ip
				nmap -p80 --script ipidseq $ip/24
				echo -e "What is the Icremental Host ?"
				read ipincre
				nmap -Pn -sI $ipincre $ip
			else
			  	echo -e "Incorrect Number"
			fi
			echo -n -e "Back to Last Menu? ( Yes / No ) :"
			read back
			if [ $back != 'n' ] && [ $back != 'N' ]
					then
					clear
					menu
			elif [ $back != 'y' ] && [ $back != 'Y' ]
					then
					hostinf
			fi		
}

webaud() {
			echo -e " "
			echo -e " 	AUDITING WEB SERVERS"
 			echo -e " +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
 			echo -e "	1- LISTING HEADERS AND TITLE (SUPPORTED HTTP METHODS)"
 			echo -e "	2- CHECKING IF AN HTTP PROXY IS OPEN"
 			echo -e "	3- TESTING DEFAULT CREDENTIALS IN WEB APPLICATION "
 			echo -e "	4- DETECTING WEB APPLICATION FIREWALLS"
 			echo -e "	5- DETECTING POSSIBLE XST VULNERABILITIES "
 			echo -e "	6- DETECTING CROSS SITE SCRIPTING VULNERABILITIES "
 			echo -e "	7- FINDING SQL INJECTION VULNERABILITIES "
 			echo -e "	8- DETECTING WEB SERVERS VULNERABLE TO SLOWLORIS DDOS "
 			echo -e "        9- USERS ENUMERATING DRUPAL WEBSITE"
 			echo -e "       10- AUDITING WORDPRESS WEBSITES"
 			echo -e "       11- BRUTE FORCING JOOMLA WEBSITE"
 			echo -e "       12- SSL-HEARTBLEED VULNERABILITY"
 			echo -e " "
 			echo -n -e $red'  \033[4mNMAPSCAN:\033[0m>> '; tput sgr0 #insert your choice
 			read n3
 			

 			if test $n3 == '1'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -p80,443 --script http-headers,http-title,http-methods $ip
 			elif test $n3 == '2'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap --script http-open-proxy -p8080 $ip
 			elif test $n3 == '3'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -p80 --script http-default-accounts $ip
 			elif test $n3 == '4'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -p80,443 --script http-waf-* $ip
 				echo -e "****************************************************"
 				nmap --script firewall-bypass $ip
 				echo -e "****************************************************"
				nmap --script firewall-bypass --script-args firewall-bypass.helper="ftp", firewall-bypass.targetport=22 $ip
 			elif test $n3 == '5'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -p80 --script http-methods,http-trace --script-args http-methods.retest $ip
 			elif test $n3 == '6'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -p80 --script http-unsafe-output-escaping $ip
 				echo -e "****************************************************"
 				nmap -p80 --script http-phpself-xss,http-unsafe-output-escaping $ip
 			elif test $n3 == '7'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -p80 --script http-sql-injection $ip
 			elif test $n3 == '8'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -p80 --script http-slowloris --max-parallelism 300 $ip
 			elif test $n3 == '9'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -p80 --script=http-drupal-enum-users --script-args http-drupal-enum-users.root="/path/" $ip
 			elif test $n3 == '11'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -sV -p80 --script http-joomla-brute $ip
 			elif test $n3 == '10'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -p80 --script http-wordpress-* $ip
 			elif test $n3 == '12'
 				then 
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -p 443 --script ssl-heartbleed $ip
 			else
			  	echo -e "Incorrect Number"
			fi
			echo -n -e "Back to Last Menu? ( Yes / No ) :"
			read back
			if [ $back != 'n' ] && [ $back != 'N' ]
					then
					clear
					menu
			elif [ $back != 'y' ] && [ $back != 'Y' ]
					then
					webaud
			fi		
}
mailaud() {
			echo -e " "
			echo -e " 	AUDITING MAIL SERVERS"
 			echo -e " +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
 			echo -e " 	1- DISCOVERING VALID E-MAIL ACCOUNTS USING GOOGLE SEARCH"
 			echo -e " 	2- DETECTING OPEN RELAYS"
 			echo -e " 	3- BRUTE FORCING SMTP PASSWORDS"
 			echo -e " 	4- ENUMERATING USERS IN AN SMTP SERVER"
 			echo -e " 	5- DETECTING BACKDOOR SMTP SERVERS"
 			echo -e " 	6- BRUTE FORCING IMAP PASSWORDS"
 			echo -e " 	7- BRUTE FORCING POP3 PASSWORDS"
 			echo -e " "
 			echo -n -e $red'  \033[4mNMAPSCAN:\033[0m>> '; tput sgr0 #insert your choice
 			read n4

 			if test $n4 == '1'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap --script-updatedb
 				++++++++++++++++++++++++++++++++++++++++++++++
 				nmap -p80 --script http-google-email $ip
 			elif test $n4 == '2'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -sV --script smtp-open-relay -v $ip
 			elif test $n4 == '3'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -p25 --script smtp-brute $ip
 			elif test $n4 == '4'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -p25 –script smtp-enum-users $ip
 			elif test $n4 == '5'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -sV --script smtp-strangeport $ip
 			elif test $n4 == '6'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -p143 --script imap-brute $ip
 			elif test $n4 == '7'
 				then
 				echo -e " What is your IP Target or Host: "
 				read ip
 				nmap -p110 --script pop3-brute $ip
 			else
			  	echo -e "Incorrect Number"
 			fi
 			echo -n -e "Back to Last Menu? ( Yes / No ) :"
			read back
			if [ $back != 'n' ] && [ $back != 'N' ]
					then
					clear
					menu
			elif [ $back != 'y' ] && [ $back != 'Y' ]
					then
					mailaud
			fi		
}
reportsc() {
 			echo -e " "
			echo -e " 	GENERATING SCAN REPORTS"
 			echo -e " +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
 			echo -e " 	1- SAVING SCAN RESULTS IN NORMAL FORMAT"
 			echo -e " 	2- SAVING SCAN RESULTS IN AN XML FORMAT"
 			echo -e " 	3- SAVING SCAN RESULTS IN A GREPABLE FORMAT"
 			echo -e " 	4- GENERATING AN HTML SCAN REPORT"
 			echo -e " "
 			echo -n -e $red'  \033[4mNMAPSCAN:\033[0m>> '; tput sgr0 #insert your choice
 			read n5
 						

 			if test $n5 == '1'
 				then
 			echo -e " Path Location: /home/Desktop/"
 			read Path
 			echo -e " Name of Report:"
 			read Name	
 				nmap -F -oN $Path/$Name.txt $ip5
 				nano $Path/$Name.txt
 			elif test $n5 == '2'
 				then
 			echo -e " Path Location: /home/Desktop/"
 			read Path
 			echo -e " Name of Report:"
 			read Name
 				nmap -A -O -oX 	$Path/$Name.xml $ip5
 				firefox $Path/$Name.xml
 			elif test $n5 == '3'
 				then
 			echo -e " Path Location: /home/Desktop/"
 			read Path
 			echo -e " Name of Report:"
 			read Name
 				nmap -F -oG $Path/$Name.grep $ip5
 				nano $Path/$Name.grep
 			elif test $n5 == '4'
 				then
 			echo -e " Path Location: /home/Desktop/"
 			read Path
 			echo -e " Name of Report:"
 			read Name
 				nmap -A -O -oX 	$Path/$Name.xml $ip5
 				xsltproc $Path/$Name.xml -o $Path/$Name.html
 				firefox $Path/$Name.html
			else
			  	echo -e "Incorrect Number"
 			fi
 			echo -n -e "Back to Last Menu? ( Yes / No ) :"
			read back
			if [ $back != 'n' ] && [ $back != 'N' ]
					then
					clear
					menu
			elif [ $back != 'y' ] && [ $back != 'Y' ]
					then
					reportsc
			fi		
}

update () {
			
			rm nmap_*.tar.gz && rm -r vulscan
			rm -r /usr/share/nmap/scripts/vulscan
			wget http://www.computec.ch/projekte/vulscan/download/nmap_nse_vulscan-2.0.tar.gz && tar -xf nmap_*.tar.gz  
			cp -r vulscan /usr/share/nmap/scripts/
			nmap --script-updatedb
			sleep 3
}
cat << !
 _  _  __  __    __    ____  _  _  ____  __    _____  ____  ____ 
( \( )(  \/  )  /__\  (  _ \( \/ )(  _ \(  )  (  _  )(_  _)(_  _)
 )  (  )    (  /(__)\  )___/ )  (  )___/ )(__  )(_)(  _)(_   )(  
(_)\_)(_/\/\_)(__)(__)(__)  (_/\_)(__)  (____)(_____)(____) (__) V1.0

!
echo -e $lightgreen'-- -- +=[(c) 2014-2015 | United Bangladeshi Hackers'
echo -e $cyan'-- -- +=[ Author: Gh0stnY ]=+ -- -- '
echo -e " "

if [ $(id -u) != "0" ]; then

      echo [!]::[Check Dependencies]: ;
      sleep 2
      echo [*]::[Check User]: $USER ;
      sleep 1
      echo [x]::[not root]: you need to be [root] to run this script.;
      echo ""
   	  sleep 1
	  exit


else
   
   echo [!]::[Check Dependencies]: ;
   sleep 0.5
   echo [*]::[Check User]: $USER ;

fi

  ping -c 1 google.com > /dev/null 2>&1
  if [ "$?" != 0 ]

then

    echo [*]::[Internet Connection]: FAILED!;
    echo [x]::[ warning ]: This Script Needs An Active Internet Connection;
    sleep 2

else

    echo [*]::[Internet Connection]: connected!;
    sleep 2
fi

 # check if Nmap installation exists
      if [ -d $find ]; then
      echo [*]::[Nmap]: installation found!;

else

   Colors;
   echo [x]::[warning]:this script require Nmap installed to work ;
   echo [!]::[please wait]: Downloading from network... ;
   sleep 3
      apt-get install nmap
      apt-get install zenmap
fi
sleep 3
clear
  
#Dont add anything under this code

cat << !
 _  _  __  __    __    ____  _  _  ____  __    _____  ____  ____ 
( \( )(  \/  )  /__\  (  _ \( \/ )(  _ \(  )  (  _  )(_  _)(_  _)
 )  (  )    (  /(__)\  )___/ )  (  )___/ )(__  )(_)(  _)(_   )(  
(_)\_)(_/\/\_)(__)(__)(__)  (_/\_)(__)  (____)(_____)(____) (__) V1.0
					      NSE NMAP SCAN
!


		echo -e " "
		echo -e "	1- NETWORK EXPLORATION "
		echo -e "	2- GATHERING ADDITIONAL HOST INFORMATION "
		echo -e "	3- AUDITING WEB SERVERS  "
		echo -e "	4- AUDITING MAIL SERVERS  "
		echo -e "	5- GENERATING SCAN REPORTS  "
		echo -e "	6- UPDATE NMAP SCRIPTS  "
		echo -e " "
		echo -n -e $red'  \033[4mNMAPSCAN:\033[0m>> '; tput sgr0 #insert your choice
		read n0
	
		if test $n0 == '6'
			then
			update

		elif test $n0 == '1'
 			then
 			hostdisc
			
		elif test $n0 == '2'
			then
			hostinf

		elif test $n0 == '3'
 			then
 			webaud

		elif test $n0 == '4'
 			then
 			mailaud

		elif test $n0 == '5'
 			then
 			reportsc
 		fi

			